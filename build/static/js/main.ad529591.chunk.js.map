{"version":3,"sources":["Components/Expenses/ExpenceDate.js","Components/UI/card.js","Components/Expenses/ExpenceItem.js","Components/Expenses/ExpensesFilter.js","Components/Expenses/ExpensesList.js","Components/chart/ChartBar.js","Components/chart/Chart.js","Components/Expenses/ExpensesChart.js","Components/Expenses/Expences.js","Components/NewExpenses/ExpenseForm.js","Components/NewExpenses/NewExpenses.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenceItem","title","amount","ExpensesFilter","value","selected","onChange","e","onChangeFilter","target","console","log","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","class","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","max","ExpenseChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilterdYear","filterdExpenses","filter","toString","selectedYear","ExpenseForm","enterdTitle","setEnterdTitle","enterdAmout","setEnterdAmount","enterdDate","setEnterdDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","event","min","step","NewExpense","parameter","floor","random","addExpense","InitialExpenses","App","setExpenses","previousExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad529591.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ExpenceDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n    \r\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return(\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\nimport './card.css'\r\nconst Card = (props) => {\r\n    const classes = `card  ${props.className}`;\r\n    return(\r\n        <div className={classes}>\r\n            {props.children}\r\n        </div>\r\n    )  \r\n}\r\n\r\nexport default Card;","\r\nimport React, {useState} from 'react';\r\nimport ExpenceDate from './ExpenceDate.js';\r\nimport './ExpenceItem.css';\r\nimport Card from '../UI/card.js'\r\n\r\nconst ExpenceItem = (props) => {\r\n    // useState returns an array and in the const array we are distructreing the array.\r\n    // const [title, setTitle] = useState(props.title);\r\n    \r\n    // const clickHandler = () => {\r\n    //     setTitle('Update!');\r\n    // }\r\n    return (\r\n        <li>\r\n            <Card className=\"expense-item\">\r\n            \r\n                <ExpenceDate date = {props.date} ></ExpenceDate>\r\n\r\n                {/* iso string just returns a iso formated date string */}\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"expense-item__price\">${props.amount}</div>\r\n                </div>\r\n                {/* <button onClick = {clickHandler}>Change Title</button> */}\r\n            </Card>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ExpenceItem;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n  const dropDownChangeHandler = (e) => {\r\n    props.onChangeFilter(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropDownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\nimport ExpenceItem from './ExpenceItem'; \r\nimport './ExpensesList.css';\r\nconst ExpensesList = props => {\r\n\r\n    if (props.items.length === 0){\r\n        return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>\r\n    }\r\n\r\n    return <ul className = \"expenses-list\">\r\n\r\n        {props.items.map( expense => \r\n            <ExpenceItem\r\n            key = {expense.id}\r\n            title = {expense.title}\r\n            amount = {expense.amount}\r\n            date = {expense.date}\r\n            ></ExpenceItem>\r\n      )};\r\n\r\n    </ul>\r\n}\r\n\r\nexport default ExpensesList;","import React from 'react';\r\n\r\nimport './ChartBar.css'\r\n\r\nconst ChartBar = props => {\r\n    let barFillHeight = '0%';\r\n\r\n    if (props.maxValue > 0){\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'; \r\n    }\r\n    return <div className = \"chart-bar\">\r\n        <div class=\"chart-bar__inner\">\r\n            <div class=\"chart-bar__fill\" style = {{height:barFillHeight}}></div>\r\n        </div>\r\n        <div class=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n}\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = props => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    console.log(dataPointValues);\r\n    const totalMax = Math.max(...dataPointValues);\r\n    console.log(totalMax);\r\n\r\n    return <div className=\"chart\">\r\n        {props.dataPoints.map((dataPoint) => ( \r\n        <ChartBar\r\n            key = {dataPoint.label} \r\n            value={dataPoint.value} \r\n            maxValue={totalMax} \r\n            label={dataPoint.label}\r\n        />\r\n        ))}\r\n    </div>\r\n};\r\n\r\nexport default Chart; ","import React from 'react';\r\n\r\nimport Chart from '../chart/Chart';\r\n\r\nconst ExpenseChart = props => {\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'July',value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0}\r\n    ];\r\n\r\n    for (const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        \r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}></Chart>\r\n};\r\n\r\nexport default ExpenseChart;","  \r\nimport React, {useState} from 'react';\r\nimport ExpenceItem from './ExpenceItem.js';\r\nimport ExpensesFilter from './ExpensesFilter.js';\r\nimport './Expences.css';\r\nimport Card from '../UI/card.js';\r\nimport ExpensesList from './ExpensesList.js';\r\nimport ExpenseChart from './ExpensesChart.js';\r\n\r\nconst Expenses = (props) => {\r\n\r\n  const [filteredYear, setFilterdYear] = useState('2021');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilterdYear(selectedYear);\r\n  }\r\n\r\n  // filter is a js method\r\n  const filterdExpenses = props.items.filter (expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  })\r\n\r\n  \r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter \r\n        selected={filteredYear} \r\n        onChangeFilter={filterChangeHandler}>\r\n      </ExpensesFilter>\r\n      {/* used turnary opartor so that we can set up something when there's no filterdExpeses */}\r\n      <ExpenseChart expenses={filterdExpenses}></ExpenseChart>\r\n      {<ExpensesList items={filterdExpenses}></ExpensesList>}\r\n\r\n      {/* initially the rendering process of ExpenseItem was this */}\r\n      {/* <ExpenceItem\r\n        title={props.items[0].title}\r\n        amount={props.items[0].amount}\r\n        date={props.items[0].date}\r\n      />\r\n      <ExpenceItem\r\n        title={props.items[1].title}\r\n        amount={props.items[1].amount}\r\n        date={props.items[1].date}\r\n      />\r\n      <ExpenceItem\r\n        title={props.items[2].title}\r\n        amount={props.items[2].amount}\r\n        date={props.items[2].date}\r\n      />\r\n      <ExpenceItem\r\n        title={props.items[3].title}\r\n        amount={props.items[3].amount}\r\n        date={props.items[3].date}\r\n      /> */}\r\n\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;","import React, {useState} from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n    const [enterdTitle, setEnterdTitle] = useState('');\r\n    const [enterdAmout, setEnterdAmount] = useState('');\r\n    const [enterdDate, setEnterdDate] = useState('');\r\n\r\n    // alternative way\r\n    // const [userInput, setUserInput] = useState({\r\n    //     enterdTitle: '',\r\n    //     enterdDate: '',\r\n    //     enterdAmout: ''     \r\n    // });\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnterdTitle(event.target.value);\r\n        \r\n        // alternative way with previous State\r\n        // setUserInput((prevState)=>{\r\n        //     return {...prevState, enterdTitle: event.target.value}\r\n        // })\r\n    }\r\n    const amountChangeHandler = (e) => {\r\n        setEnterdAmount (e.target.value);\r\n\r\n        // alternative way\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enterdDate: e.target.value \r\n        // })\r\n    }\r\n    const dateChangeHandler = (e) => {\r\n        setEnterdDate (e.target.value);\r\n        \r\n        // alternative way\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enterdAmout: e.target.value \r\n        // })\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enterdTitle,\r\n            amount: enterdAmout,\r\n            date: new Date(enterdDate)\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n\r\n        setEnterdTitle('');\r\n        setEnterdAmount('');\r\n        setEnterdDate('');\r\n    }\r\n\r\n\r\n    return (\r\n    <form onSubmit = {submitHandler}>\r\n        <div className= \"new-expense__controls\">\r\n            <div className= \"new-expense__control\">\r\n                <label>Title</label>\r\n                <input \r\n                    type = 'text' \r\n                    value={enterdTitle} \r\n                    onChange={titleChangeHandler}>\r\n                </input>\r\n            </div>\r\n            <div className= \"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input \r\n                    type = 'number'\r\n                    value={enterdAmout} \r\n                    min='0.01' \r\n                    step='0.01' \r\n                    onChange={amountChangeHandler}>\r\n                </input>\r\n            </div>\r\n            <div className= \"new-expense__control\">\r\n                <label>Date</label>\r\n                <input \r\n                    type = 'date'\r\n                    value={enterdDate} \r\n                    min='2000-01-01' \r\n                    max='2030-12-01' \r\n                    onChange={dateChangeHandler}>\r\n                </input>\r\n            </div>\r\n        </div>\r\n        <div className='new-expense__actions'>\r\n            <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\nexport default ExpenseForm;","import React from 'react';\r\nimport './NewExpenses.css';\r\nimport ExpenseForm from './ExpenseForm';\r\nconst NewExpense = (props) => {\r\n\r\n    const saveExpenseDataHandler = (parameter) => {\r\n        const expenseData = {\r\n            ...parameter,\r\n            id: Math.floor(Math.random() * 100)\r\n        };\r\n        props.addExpense(expenseData);\r\n    }\r\n    return <div className=\"new-expense\">\r\n        <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}></ExpenseForm>\r\n    </div>\r\n}\r\nexport default NewExpense;","import React, {useState} from 'react';\nimport Expences from './Components/Expenses/Expences';\nimport NewExpense from './Components/NewExpenses/NewExpenses';\n\n  // a variable for the ExpenceItem component\n  const InitialExpenses = [\n    {\n      id: 'e1',\n      title: 'Toilet Paper',\n      amount: 94.12,\n      date: new Date(2020, 7, 14)\n    },\n    { id: 'e2', \n      title: 'New TV', \n      amount: 799.9, \n      date: new Date(2021, 2, 12) \n    },\n    {\n      id: 'e3',\n      title: 'Car Insurance',\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: 'e4',\n      title: 'New Desk (Wooden)',\n      amount: 450,\n      date: new Date(2021, 5, 12)\n    }\n  ]\n  \nfunction App() {\n  // setting up useState\n  const [expenses, setExpenses] = useState(InitialExpenses);\n  \n// setting up addExpenseHandler\n  const addExpenseHandler = (expense) => {\n    setExpenses ( previousExpenses => {\n      return [expense, ...previousExpenses]\n    });\n    console.log('this is coming from app')\n  };\n\n  return (\n    <div>\n      <NewExpense addExpense={addExpenseHandler}></NewExpense>\n      <Expences items={expenses} />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}